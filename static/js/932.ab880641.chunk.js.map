{"version":3,"file":"static/js/932.ab880641.chunk.js","mappings":"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","sources":["components/ui/Input/Input.js","components/ui/Buttons/ButtonSubmit.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/PopupWithImage.js","components/ErrorBlock.js","components/Card.js","components/Main.js","pages/HomePage/HomePage.js"],"sourcesContent":["import React from 'react';\nimport {classNames} from \"../../../utils/helpers\";\n\nconst Input = React.forwardRef((props, ref) => {\n  const {className, inverted, error, errorMessage, ...otherProps} = props\n  return (\n    <label className={classNames(['text-field', className])}>\n      <input\n        ref={ref}\n        className={classNames(['text-field__input'], {\n          ['text-field__input_type_error']: error,\n          ['text-field__input_type_inverted']: inverted,\n        })}\n        {...otherProps}\n      />\n      <span className=\"text-field__error\">{errorMessage}</span>\n    </label>\n  );\n});\n\nexport default Input;","import React from 'react';\nimport {classNames} from \"../../../utils/helpers\";\n\nconst ButtonSubmit = ({inverted, className, children, ...props}) => {\n  return (\n    <button\n      className={classNames(['button button__submit', className], {\n        ['button__submit_type_inverted']: inverted\n      })}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default ButtonSubmit;","import React from 'react';\nimport {usePopupCloseListeners} from \"../hooks\";\nimport {classNames} from \"../utils/helpers\";\nimport {ButtonSubmit} from \"./ui\";\n\nconst PopupWithForm = ({\n  name,\n  title,\n  buttonText,\n  children,\n  isOpen,\n  onClose,\n  onSubmit,\n  isSubmitDisabled\n}) => {\n  const {\n    handleCloseOnOverlay,\n    onAnimationEnd,\n    isVisible\n  } = usePopupCloseListeners(isOpen, onClose)\n\n  return (\n    <>\n      {isVisible && (\n        <div\n          onMouseDown={handleCloseOnOverlay}\n          onAnimationEnd={onAnimationEnd}\n          className={classNames(['popup', `popup_type_${name}`], {['popup_opened']: isOpen})}\n        >\n          <div className=\"popup__container\">\n\n            <h2 className=\"popup__title\">{title}</h2>\n\n            <form\n              onSubmit={onSubmit}\n              name={name}\n              className=\"popup__form\"\n              autoComplete=\"off\"\n            >\n\n              {children}\n\n              <ButtonSubmit\n                disabled={isSubmitDisabled}\n                type=\"submit\"\n                aria-label={buttonText}\n              >\n                {buttonText}\n              </ButtonSubmit>\n\n            </form>\n\n            <button\n              onClick={onClose}\n              className=\"button popup__close\"\n              type=\"button\"\n              aria-label=\"Закрыть модальное окно\"\n            />\n\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts\";\nimport {useSubmitButton, useValidation} from \"../hooks\";\nimport {Input} from \"./ui\";\n\nconst EditProfilePopup = ({isOpen, onClose}) => {\n  const {currentUser, updateUserInfo, isLoading} = React.useContext(CurrentUserContext)\n  const name = useValidation('')\n  const about = useValidation('')\n  const {\n    buttonText,\n    setButtonText,\n    isSubmitDisabled\n  } = useSubmitButton({\n    initialText: 'Сохранить',\n    inputsValidity: [name.isValid, about.isValid],\n    isLoading\n  })\n\n  React.useEffect(() => {\n    name.set(currentUser.name)\n    about.set(currentUser.about)\n  }, [currentUser, isOpen]);\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setButtonText('Сохранение...')\n    updateUserInfo({name: name.value, about: about.value})\n      .then(() => {\n        onClose()\n      })\n      .catch(console.log)\n      .finally(() => {\n        setButtonText('Сохранить')\n      })\n  }\n\n  React.useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        name.ref.current.focus()\n      }, 100)\n    }\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      name='edit'\n      title='Редактировать профиль'\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isSubmitDisabled={isSubmitDisabled}\n    >\n\n      <Input\n        value={name.value ?? ''}\n        onChange={name.onChange}\n        ref={name.ref}\n        error={Boolean(name.error)}\n        errorMessage={name.error}\n        type=\"text\"\n        placeholder=\"Имя\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        required\n      />\n\n      <Input\n        className='popup__field'\n        value={about.value ?? ''}\n        onChange={about.onChange}\n        ref={about.ref}\n        error={Boolean(about.error)}\n        errorMessage={about.error}\n        type=\"text\"\n        placeholder=\"О себе\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n      />\n\n    </PopupWithForm>\n  );\n};\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts\";\nimport {useSubmitButton, useValidation} from \"../hooks\";\nimport {Input} from \"./ui\";\n\nconst EditAvatarPopup = ({isOpen, onClose}) => {\n  const {updateAvatar, isLoading} = React.useContext(CurrentUserContext)\n  const avatar = useValidation('')\n  const {\n    buttonText,\n    setButtonText,\n    isSubmitDisabled\n  } = useSubmitButton({\n    initialText: 'Сохранить',\n    inputsValidity: [avatar.isValid],\n    isLoading\n  })\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setButtonText('Сохранение...')\n    updateAvatar({avatar: avatar.value})\n      .then(() => {\n        handleClose()\n      })\n      .catch(console.log)\n      .finally(() => {\n        setButtonText('Сохранить')\n      })\n  }\n\n  const handleClose = () => {\n    avatar.clear()\n    onClose()\n  }\n\n  React.useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        avatar.ref.current.focus()\n      }, 100)\n    }\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      name='avatar'\n      title='Обновить аватар'\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSubmitDisabled={isSubmitDisabled}\n      onSubmit={handleSubmit}\n    >\n\n      <Input\n        className='popup__field'\n        value={avatar.value}\n        onChange={avatar.onChange}\n        ref={avatar.ref}\n        error={Boolean(avatar.error)}\n        errorMessage={avatar.error}\n        type=\"url\"\n        placeholder=\"Ссылка на аватар\"\n        required\n      />\n\n    </PopupWithForm>\n  );\n};\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {useSubmitButton, useValidation} from \"../hooks\";\nimport {Input} from \"./ui\";\nimport {CardsContext} from \"../contexts\";\n\nconst AddPlacePopup = ({isOpen, onClose}) => {\n  const {addCard, isLoading} = React.useContext(CardsContext)\n  const name = useValidation('')\n  const link = useValidation('')\n  const {\n    buttonText,\n    setButtonText,\n    isSubmitDisabled\n  } = useSubmitButton({\n    initialText: 'Создать',\n    inputsValidity: [name.isValid, link.isValid],\n    isLoading\n  })\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setButtonText('Создание...')\n    addCard({link: link.value, name: name.value})\n      .then(() => {\n        handleClose()\n      })\n      .catch(console.log)\n      .finally(() => {\n        setButtonText('Создать')\n      })\n  }\n\n  const handleClose = () => {\n    name.clear()\n    link.clear()\n    onClose()\n  }\n\n  React.useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        name.ref.current.focus()\n      }, 100)\n    }\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      name='add'\n      title='Добавить пост'\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      isSubmitDisabled={isSubmitDisabled}\n    >\n\n      <Input\n        value={name.value}\n        onChange={name.onChange}\n        ref={name.ref}\n        error={Boolean(name.error)}\n        errorMessage={name.error}\n        type=\"text\"\n        placeholder=\"Место\"\n        minLength=\"2\"\n        maxLength=\"30\"\n        required\n      />\n\n      <Input\n        className='popup__field'\n        value={link.value}\n        onChange={link.onChange}\n        ref={link.ref}\n        error={Boolean(link.error)}\n        errorMessage={link.error}\n        type=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        required\n      />\n\n    </PopupWithForm>\n  );\n};\n\nexport default AddPlacePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {useSubmitButton} from \"../hooks\";\nimport {CardsContext} from \"../contexts\";\n\nconst ConfirmDeletePopup = ({isOpen, onClose, cardId}) => {\n  const {deleteCard, isLoading} = React.useContext(CardsContext)\n  const {\n    buttonText,\n    setButtonText,\n    isSubmitDisabled\n  } = useSubmitButton({\n    initialText: 'Да',\n    isLoading\n  })\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setButtonText('Удаление...')\n    deleteCard(cardId)\n      .then(() => {\n        onClose()\n      })\n      .catch(console.log)\n      .finally(() => {\n        setButtonText('Да')\n      })\n  }\n\n  return (\n    <PopupWithForm\n      title='Вы уверены?'\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      isSubmitDisabled={isSubmitDisabled}\n    />\n  );\n};\n\nexport default ConfirmDeletePopup;","import React from 'react';\nimport {usePopupCloseListeners} from \"../hooks\";\nimport {classNames} from \"../utils/helpers\";\n\nconst PopupWithImage = ({link, name, isOpen, onClose}) => {\n  const {\n    handleCloseOnOverlay,\n    onAnimationEnd,\n    isVisible\n  } = usePopupCloseListeners(isOpen, onClose)\n\n  return (\n    <>\n      {isVisible && (\n        <div\n          onClick={handleCloseOnOverlay}\n          onAnimationEnd={onAnimationEnd}\n          className={classNames(['popup', 'popup_type_image', 'popup_dark'], {['popup_opened']: isOpen})}\n        >\n          {Boolean(isOpen) &&\n            <div className=\"popup__container popup__container_image\">\n              <img className=\"popup__full-screen-image\" src={link} alt={name}/>\n              <p className=\"popup__location\">{name}</p>\n              <button\n                onClick={onClose}\n                className=\"button popup__close\"\n                type=\"button\"\n                aria-label=\"Закрыть модальное окно\"\n              />\n            </div>}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PopupWithImage;","import React from 'react';\n\nconst ErrorBlock = ({text, error}) => {\n  return (\n    <div>\n      <h3>{text}</h3>\n      <h4>{error}</h4>\n    </div>\n  );\n};\n\nexport default ErrorBlock;","import React from 'react';\nimport {CurrentUserContext, CardsContext} from \"../contexts\";\nimport {classNames} from \"../utils/helpers\";\n\nconst Card = React.memo(({\n  _id,\n  name,\n  link,\n  likes,\n  owner,\n  onImageClick,\n  onCardDelete\n}) => {\n  const {currentUser} = React.useContext(CurrentUserContext)\n  const {likeCard} = React.useContext(CardsContext)\n  const isOwner = currentUser._id === owner._id\n  const isLiked = likes.some(item => item._id === currentUser._id)\n\n  const handleDeleteCard = () => {\n    onCardDelete(_id)\n  }\n\n  const handleOpenPopup = () => {\n    onImageClick({name, link})\n  }\n\n  const handleLikeCard = () => {\n    likeCard(isLiked, _id)\n  }\n\n  return (\n    <div className=\"card\">\n      <img\n        onClick={handleOpenPopup}\n        src={link}\n        alt={name}\n        className=\"card__photo\"\n      />\n      <div className=\"card__description\">\n        <h2 className=\"card__location\">{name}</h2>\n        <div className=\"card__like\">\n          <button\n            onClick={handleLikeCard}\n            className={classNames(['button card__like-button'], {['card__like-button_active']: isLiked})}\n            type=\"button\"\n            aria-label=\"Поставить лайк\"\n          />\n          <p className=\"card__likes\">{likes.length}</p>\n        </div>\n      </div>\n      {isOwner &&\n        <button\n          onClick={handleDeleteCard}\n          className=\"button card__delete-button\"\n          type=\"button\"\n          aria-label=\"Удалить пост\"\n        />}\n    </div>\n  );\n});\n\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\nimport {CurrentUserContext, CardsContext} from \"../contexts\";\n\nconst Main = ({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  cardProps\n}) => {\n  const {currentUser: {name, avatar, about}} = React.useContext(CurrentUserContext)\n  const {cards} = React.useContext(CardsContext)\n\n  return (\n    <>\n      <section className=\"profile\">\n        <div\n          onClick={onEditAvatar}\n          className=\"profile__avatar-container\"\n        >\n          <img className=\"profile__avatar\" src={avatar} alt=\"Аватарка\"/>\n          <div className=\"profile__avatar-edit\" />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{name}</h1>\n          <button\n            onClick={onEditProfile}\n            className=\"button profile__edit-button\"\n            type=\"button\"\n            aria-label=\"Редактировать профиль\"/>\n          <p className=\"profile__description\">{about}</p>\n        </div>\n        <button\n          onClick={onAddPlace}\n          className=\"button profile__add-button\"\n          type=\"button\"\n          aria-label=\"Добавить пост\"/>\n      </section>\n\n      <section className=\"gallery\" aria-label=\"Посты пользователя\">\n        {cards.map(card => (\n          <Card\n            key={card._id}\n            {...card}\n            {...cardProps}\n          />\n        ))}\n      </section>\n    </>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport EditProfilePopup from \"../../components/EditProfilePopup\";\nimport EditAvatarPopup from \"../../components/EditAvatarPopup\";\nimport AddPlacePopup from \"../../components/AddPlacePopup\";\nimport ConfirmDeletePopup from \"../../components/ConfirmDeletePopup\";\nimport PopupWithImage from \"../../components/PopupWithImage\";\nimport ErrorBlock from \"../../components/ErrorBlock\";\nimport Main from \"../../components/Main\";\nimport {usePopup} from \"../../hooks\";\nimport {CardsContext} from \"../../contexts\";\n\nconst HomePage = () => {\n  const {error} = React.useContext(CardsContext)\n  const popupAdd = usePopup({initialIsOpen: false})\n  const popupEdit = usePopup({initialIsOpen: false})\n  const popupAvatar = usePopup({initialIsOpen: false})\n  const popupDelete = usePopup({initialIsOpen: false})\n  const popupImage = usePopup({initialIsOpen: false})\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [deletingCard, setDeletingCard] = React.useState('');\n\n  const handleConfirmDeleteCard = React.useCallback((id) => {\n    popupDelete.open()\n    setDeletingCard(id)\n  }, [])\n\n  const handleClickCard = React.useCallback(({name, link}) => {\n    popupImage.open()\n    setSelectedCard({name, link})\n  }, [])\n\n  const cardProps = {\n    onCardDelete: handleConfirmDeleteCard,\n    onImageClick: handleClickCard\n  }\n\n  if (error) {\n    return (\n      <ErrorBlock\n        text='Не удалось загрузить карточки'\n        error={error}\n      />\n    )\n  }\n\n  return (\n    <>\n      <Main\n        onAddPlace={popupAdd.open}\n        onEditAvatar={popupAvatar.open}\n        onEditProfile={popupEdit.open}\n        cardProps={cardProps}\n      />\n\n      <EditProfilePopup\n        isOpen={popupEdit.isOpen}\n        onClose={popupEdit.close}\n      />\n\n      <EditAvatarPopup\n        isOpen={popupAvatar.isOpen}\n        onClose={popupAvatar.close}\n      />\n\n      <AddPlacePopup\n        isOpen={popupAdd.isOpen}\n        onClose={popupAdd.close}\n      />\n\n      <ConfirmDeletePopup\n        isOpen={popupDelete.isOpen}\n        onClose={popupDelete.close}\n        cardId={deletingCard}\n      />\n\n      <PopupWithImage\n        isOpen={popupImage.isOpen}\n        onClose={popupImage.close}\n        {...selectedCard}\n      />\n    </>\n  );\n};\n\nexport default HomePage;"],"names":["React","props","ref","_classNames","className","inverted","error","errorMessage","otherProps","_objectWithoutProperties","_excluded","_jsxs","classNames","children","_jsx","_objectSpread","_defineProperty","_ref","name","title","buttonText","isOpen","onClose","onSubmit","isSubmitDisabled","_usePopupCloseListene","usePopupCloseListeners","handleCloseOnOverlay","onAnimationEnd","isVisible","_Fragment","onMouseDown","concat","autoComplete","ButtonSubmit","disabled","type","onClick","_name$value","_about$value","_React$useContext","CurrentUserContext","currentUser","updateUserInfo","isLoading","useValidation","about","_useSubmitButton","useSubmitButton","initialText","inputsValidity","isValid","setButtonText","set","setTimeout","current","focus","PopupWithForm","e","preventDefault","value","then","catch","console","log","finally","Input","onChange","Boolean","placeholder","minLength","maxLength","required","updateAvatar","avatar","handleClose","clear","CardsContext","addCard","link","cardId","deleteCard","src","alt","text","_id","likes","owner","onImageClick","onCardDelete","likeCard","isOwner","isLiked","some","item","length","onEditProfile","onAddPlace","onEditAvatar","cardProps","_React$useContext$cur","cards","map","card","Card","popupAdd","usePopup","initialIsOpen","popupEdit","popupAvatar","popupDelete","popupImage","_React$useState","_React$useState2","_slicedToArray","selectedCard","setSelectedCard","_React$useState3","_React$useState4","deletingCard","setDeletingCard","id","open","ErrorBlock","Main","EditProfilePopup","close","EditAvatarPopup","AddPlacePopup","ConfirmDeletePopup","PopupWithImage"],"sourceRoot":""}