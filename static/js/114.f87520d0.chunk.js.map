{"version":3,"file":"static/js/114.f87520d0.chunk.js","mappings":"sJA0EA,IAtEiB,SAAHA,GAAgE,IAA3DC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAAOC,EAAUH,EAAVG,WAAYC,EAAQJ,EAARI,SAAUC,EAAaL,EAAbK,cAClDC,GAAQC,EAAAA,EAAAA,IAAc,IACtBC,GAAWD,EAAAA,EAAAA,IAAc,IACxBE,GAAoBC,EAAAA,EAAAA,IAAgB,CACzCC,eAAgBN,EAAgB,CAACC,EAAMM,QAASJ,EAASI,SAAW,KAD/DH,iBAiBP,OAJAI,EAAAA,WAAgB,WACdP,EAAMQ,IAAIC,QAAQC,OACpB,GAAG,KAGDC,EAAAA,EAAAA,MAAA,QACEhB,SAfiB,SAACiB,GACpBA,EAAEC,iBAEFlB,EAAS,CACPK,MAAOA,EAAMc,MACbZ,SAAUA,EAASY,OAEvB,EASIC,UAAU,OACVC,aAAa,MAAKlB,SAAA,EAElBmB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCjB,SAAEF,KAElDqB,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJJ,MAAOd,EAAMc,MACbK,SAAUnB,EAAMmB,SAChBX,IAAKR,EAAMQ,IACXY,MAAOrB,GAAiBsB,QAAQrB,EAAMoB,OACtCE,aAAcvB,GAAiBC,EAAMoB,MACrCG,UAAQ,EACRC,KAAK,QACLC,YAAY,QACZC,UAAQ,KAGVT,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJJ,MAAOZ,EAASY,MAChBK,SAAUjB,EAASiB,SACnBX,IAAKN,EAASM,IACdY,MAAOrB,GAAiBsB,QAAQnB,EAASkB,OACzCE,aAAcvB,GAAiBG,EAASkB,MACxCI,KAAK,WACLC,YAAY,uCACZE,UAAU,IACVC,UAAU,KACVL,UAAQ,EACRG,UAAQ,KAGVT,EAAAA,EAAAA,KAACY,EAAAA,EAAY,CACXC,SAAU3B,EACVY,UAAU,eACVQ,UAAQ,EACRC,KAAK,SACL,aAAY3B,EAAWC,SAEtBD,IAGFC,IAIP,C,8ICvCA,EAzBc,SAAHJ,GAAmB,IAAdqC,EAAOrC,EAAPqC,QACdC,EAA2BzB,EAAAA,WAAiB0B,EAAAA,IAArCC,EAAKF,EAALE,MAAOC,EAASH,EAATG,UAOd,OACExB,EAAAA,EAAAA,MAAAyB,EAAAA,SAAA,CAAAtC,SAAA,EACEmB,EAAAA,EAAAA,KAACoB,EAAAA,EAAQ,CACP1C,SARc,SAAH2C,GAA2B,IAAtBtC,EAAKsC,EAALtC,MAAOE,EAAQoC,EAARpC,SAC3BgC,EAAM,CAAClC,MAAAA,EAAOE,SAAAA,IACXqC,MAAMR,EACX,EAMMnC,MAAM,2BACNC,WAAW,iCAAOC,UAElBmB,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAACzB,UAAU,aAAa0B,GAAIC,EAAAA,GAAAA,OAAAA,KAAsB5C,SAAC,yLAK1DmB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CAACR,UAAWA,MAGzB,E,SCXA,EAdmB,SAAHzC,GAAsB,IAAjBkD,EAAUlD,EAAVkD,WAGnB,OAFiBrC,EAAAA,WAAiB0B,EAAAA,IAA3BY,QAGE5B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAQ,CAACL,GAAIC,EAAAA,GAAAA,KAAAA,KAAqBK,SAAO,KAIjD9B,EAAAA,EAAAA,KAAA,WAAAnB,UACEmB,EAAAA,EAAAA,KAAC+B,GAAKC,EAAAA,EAAAA,GAAA,GAAKL,KAGjB,C","sources":["components/AuthForm.js","components/Login.js","pages/SignInPage/SignInPage.js"],"sourcesContent":["import React from 'react';\r\nimport {ButtonSubmit, Input} from \"./ui\";\r\nimport {useSubmitButton, useValidation} from \"../hooks\";\r\n\r\nconst AuthForm = ({onSubmit, title, buttonText, children, hasValidation}) => {\r\n  const email = useValidation('')\r\n  const password = useValidation('')\r\n  const {isSubmitDisabled} = useSubmitButton({\r\n    inputsValidity: hasValidation ? [email.isValid, password.isValid] : []\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    onSubmit({\r\n      email: email.value,\r\n      password: password.value\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    email.ref.current.focus()\r\n  }, []);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"form\"\r\n      autoComplete=\"off\"\r\n    >\r\n      <h2 className=\"form__title form__title_inverted\">{title}</h2>\r\n\r\n      <Input\r\n        value={email.value}\r\n        onChange={email.onChange}\r\n        ref={email.ref}\r\n        error={hasValidation && Boolean(email.error)}\r\n        errorMessage={hasValidation && email.error}\r\n        inverted\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        required\r\n      />\r\n\r\n      <Input\r\n        value={password.value}\r\n        onChange={password.onChange}\r\n        ref={password.ref}\r\n        error={hasValidation && Boolean(password.error)}\r\n        errorMessage={hasValidation && password.error}\r\n        type=\"password\"\r\n        placeholder=\"Пароль\"\r\n        minLength=\"6\"\r\n        maxLength=\"20\"\r\n        inverted\r\n        required\r\n      />\r\n\r\n      <ButtonSubmit\r\n        disabled={isSubmitDisabled}\r\n        className='form__submit'\r\n        inverted\r\n        type=\"submit\"\r\n        aria-label={buttonText}\r\n      >\r\n        {buttonText}\r\n      </ButtonSubmit>\r\n\r\n      {children}\r\n\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {AuthContext} from \"../contexts\";\r\nimport {appRoutes} from \"../utils/consts\";\r\nimport Loader from \"./Loader\";\r\nimport AuthForm from \"./AuthForm\";\r\n\r\n\r\nconst Login = ({onError}) => {\r\n  const {login, isLoading} = React.useContext(AuthContext)\r\n\r\n  const handleLogin = ({email, password}) => {\r\n    login({email, password})\r\n      .catch(onError)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AuthForm\r\n        onSubmit={handleLogin}\r\n        title='Вход'\r\n        buttonText='Войти'\r\n      >\r\n        <Link className='form__link' to={appRoutes.signUp.path}>\r\n          Нет аккаунта? Зарегистрироваться\r\n        </Link>\r\n      </AuthForm>\r\n\r\n      <Loader isLoading={isLoading}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\nimport Login from \"../../components/Login\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {appRoutes} from \"../../utils/consts\";\r\nimport {AuthContext} from \"../../contexts\";\r\n\r\nconst SignInPage = ({loginProps}) => {\r\n  const {isAuth} = React.useContext(AuthContext)\r\n\r\n  if (isAuth) {\r\n    return <Navigate to={appRoutes.home.path} replace />\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <Login {...loginProps} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignInPage;"],"names":["_ref","onSubmit","title","buttonText","children","hasValidation","email","useValidation","password","isSubmitDisabled","useSubmitButton","inputsValidity","isValid","React","ref","current","focus","_jsxs","e","preventDefault","value","className","autoComplete","_jsx","Input","onChange","error","Boolean","errorMessage","inverted","type","placeholder","required","minLength","maxLength","ButtonSubmit","disabled","onError","_React$useContext","AuthContext","login","isLoading","_Fragment","AuthForm","_ref2","catch","Link","to","appRoutes","Loader","loginProps","isAuth","Navigate","replace","Login","_objectSpread"],"sourceRoot":""}